(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[35336],{219001:function(s,n,e){"use strict";e.r(n),e.d(n,{default:function(){return r}});var a={};e.r(a),e.d(a,{demoComponents:function(){return i},demos:function(){return l},docs:function(){return o},srcComponents:function(){return c}});var t=e(295649);e(827378);var p=e(30733),o={en:{description:"This guide explains how to migrate from JSS to Emotion when updating from Material UI v4 to v5.",location:"/docs/data/material/migration/migration-v4/migrating-from-jss.md",rendered:['\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>Migrating from JSS (optional)</h1><p class="description">This guide explains how to migrate from JSS to Emotion when updating from Material UI v4 to v5.</p>\n\n<h2 id="material-ui-v5-migration">Material UI v5 migration<a aria-labelledby="material-ui-v5-migration" class="anchor-link" href="#material-ui-v5-migration" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="material-ui-v5-migration"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><ol>\n<li><a href="/material-ui/migration/migration-v4/">Getting started</a></li>\n<li><a href="/material-ui/migration/v5-style-changes/">Breaking changes part one: style and theme</a></li>\n<li><a href="/material-ui/migration/v5-component-changes/">Breaking changes part two: components</a></li>\n<li>Migrating from JSS \uD83D\uDC48 <em>you are here</em></li>\n<li><a href="/material-ui/migration/troubleshooting/">Troubleshooting</a></li>\n</ol>\n<h2 id="migrating-from-jss-to-emotion">Migrating from JSS to Emotion<a aria-labelledby="migrating-from-jss-to-emotion" class="anchor-link" href="#migrating-from-jss-to-emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="migrating-from-jss-to-emotion"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>One of the biggest changes in v5 is the replacement of JSS for <a href="https://emotion.sh/docs/introduction">Emotion</a> (or <a href="https://styled-components.com/">styled-components</a> as an alternative) as a default styling solution .</p>\n<p>Note that you may continue to use JSS for adding overrides for the components (e.g. <code>makeStyles</code>, <code>withStyles</code>) even after migrating to v5.\nThen, if at any point you want to move over to the new styling engine, you can refactor your components progressively.</p>\n<aside class="MuiCallout-root MuiCallout-info"><p>If you are using Next.js and you are not sure how to configure SSR to work with both Emotion &amp; JSS, take a look a this <a href="https://github.com/mui/material-ui/tree/master/examples/material-next-ts-v4-v5-migration">example project</a>.</p>\n\n</aside><p>This document reviews all the steps necessary to migrate away from JSS.</p>\n<p>While you can use either of the following two options, the first is considered preferable:</p>\n<h3 id="1-use-styled-or-sx-api">1. Use styled or sx API<a aria-labelledby="1-use-styled-or-sx-api" class="anchor-link" href="#1-use-styled-or-sx-api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="1-use-styled-or-sx-api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><h4>Codemod</h4><p>We provide <a href="https://github.com/mui/material-ui/blob/master/packages/mui-codemod/README.md#jss-to-styled">a codemod</a> to help migrate JSS styles to <code>styled</code> API, but this approach increases the CSS specificity.</p>\n<aside class="MuiCallout-root MuiCallout-info"><p>Normally you wouldn&#39;t write styles like this.\nBut this is the best transformation that we could create with a codemod.</p>\n<p>If you want to refine them later, you can refer to the examples shown in the sections below.</p>\n\n</aside><div class="MuiCode-root"><pre><code class="language-bash">npx @mui/codemod v5.0.0/jss-to-styled <span class="token operator">&lt;</span>path<span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Example transformation:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import Typography from \'@mui/material/Typography\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import makeStyles from \'@mui/styles/makeStyles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { styled } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const useStyles = makeStyles((theme) => ({\n</span><span class="token prefix deleted">-</span><span class="token line">  root: {\n</span><span class="token prefix deleted">-</span><span class="token line">    display: \'flex\',\n</span><span class="token prefix deleted">-</span><span class="token line">    alignItems: \'center\',\n</span><span class="token prefix deleted">-</span><span class="token line">    backgroundColor: theme.palette.primary.main\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span><span class="token prefix deleted">-</span><span class="token line">  cta: {\n</span><span class="token prefix deleted">-</span><span class="token line">    borderRadius: theme.shape.radius\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span><span class="token prefix deleted">-</span><span class="token line">  content: {\n</span><span class="token prefix deleted">-</span><span class="token line">    color: theme.palette.common.white,\n</span><span class="token prefix deleted">-</span><span class="token line">    fontSize: 16,\n</span><span class="token prefix deleted">-</span><span class="token line">    lineHeight: 1.7\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span><span class="token prefix deleted">-</span><span class="token line">}))\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const PREFIX = \'MyCard\';\n</span><span class="token prefix inserted">+</span><span class="token line">const classes = {\n</span><span class="token prefix inserted">+</span><span class="token line">  root: `${PREFIX}-root`,\n</span><span class="token prefix inserted">+</span><span class="token line">  cta: `${PREFIX}-cta`,\n</span><span class="token prefix inserted">+</span><span class="token line">  content: `${PREFIX}-content`,\n</span><span class="token prefix inserted">+</span><span class="token line">}\n</span><span class="token prefix inserted">+</span><span class="token line">const Root = styled(\'div\')(({ theme }) => ({\n</span><span class="token prefix inserted">+</span><span class="token line">  [`&amp;.${classes.root}`]: {\n</span><span class="token prefix inserted">+</span><span class="token line">    display: \'flex\',\n</span><span class="token prefix inserted">+</span><span class="token line">    alignItems: \'center\',\n</span><span class="token prefix inserted">+</span><span class="token line">    backgroundColor: theme.palette.primary.main\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span><span class="token prefix inserted">+</span><span class="token line">  [`&amp; .${classes.cta}`]: {\n</span><span class="token prefix inserted">+</span><span class="token line">    borderRadius: theme.shape.radius\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span><span class="token prefix inserted">+</span><span class="token line">  [`&amp; .${classes.content}`]: {\n</span><span class="token prefix inserted">+</span><span class="token line">    color: theme.palette.common.white,\n</span><span class="token prefix inserted">+</span><span class="token line">    fontSize: 16,\n</span><span class="token prefix inserted">+</span><span class="token line">    lineHeight: 1.7\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span><span class="token prefix inserted">+</span><span class="token line">}))\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export const MyCard = () => {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const classes = useStyles();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    &lt;div className={classes.root}>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &lt;Root className={classes.root}>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      {/* The benefit of this approach is that the code inside Root stays the same. */}\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Typography className={classes.content}>...&lt;/Typography>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Button className={classes.cta}>Go&lt;/Button>\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    &lt;/div>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &lt;/Root>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  )\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-success"><p>You should run this codemod on a small chunk of files and then check the changes before continuing, because in some cases you might need to adjust the code after the transformation—this codemod won&#39;t cover all cases.</p>\n\n</aside><h4>Manual</h4><p>We recommend <code>sx</code> API over <code>styled</code> for creating responsive styles or overriding minor CSS.\n<a href="/system/getting-started/the-sx-prop/">Read more about <code>sx</code> here</a>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import Chip from \'@mui/material/Chip\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import makeStyles from \'@mui/styles/makeStyles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import Box from \'@mui/material/Box\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const useStyles = makeStyles((theme) => ({\n</span><span class="token prefix deleted">-</span><span class="token line">  wrapper: {\n</span><span class="token prefix deleted">-</span><span class="token line">    display: \'flex\',\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span><span class="token prefix deleted">-</span><span class="token line">  chip: {\n</span><span class="token prefix deleted">-</span><span class="token line">    padding: theme.spacing(1, 1.5),\n</span><span class="token prefix deleted">-</span><span class="token line">    boxShadow: theme.shadows[1],\n</span><span class="token prefix deleted">-</span><span class="token line">  }\n</span><span class="token prefix deleted">-</span><span class="token line">}));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function App() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const classes = useStyles();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    &lt;div className={classes.wrapper}>\n</span><span class="token prefix deleted">-</span><span class="token line">      &lt;Chip className={classes.chip} label="Chip" />\n</span><span class="token prefix deleted">-</span><span class="token line">    &lt;/div>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &lt;Box sx={{ display: \'flex\' }}>\n</span><span class="token prefix inserted">+</span><span class="token line">      &lt;Chip label="Chip" sx={{ py: 1, px: 1.5, boxShadow: 1 }} />\n</span><span class="token prefix inserted">+</span><span class="token line">    &lt;/Box>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>In some cases, you might want to create multiple styled components in a file instead of increasing CSS specificity.</p>\n<p>For example:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import makeStyles from \'@mui/styles/makeStyles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { styled } from \'@mui/material/styles\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const useStyles = makeStyles((theme) => ({\n</span><span class="token prefix deleted">-</span><span class="token line">  root: {\n</span><span class="token prefix deleted">-</span><span class="token line">    display: \'flex\',\n</span><span class="token prefix deleted">-</span><span class="token line">    alignItems: \'center\',\n</span><span class="token prefix deleted">-</span><span class="token line">    borderRadius: 20,\n</span><span class="token prefix deleted">-</span><span class="token line">    background: theme.palette.grey[50],\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span><span class="token prefix deleted">-</span><span class="token line">  label: {\n</span><span class="token prefix deleted">-</span><span class="token line">    color: theme.palette.primary.main,\n</span><span class="token prefix deleted">-</span><span class="token line">  }\n</span><span class="token prefix deleted">-</span><span class="token line">}))\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const Root = styled(\'div\')(({ theme }) => ({\n</span><span class="token prefix inserted">+</span><span class="token line">  display: \'flex\',\n</span><span class="token prefix inserted">+</span><span class="token line">  alignItems: \'center\',\n</span><span class="token prefix inserted">+</span><span class="token line">  borderRadius: 20,\n</span><span class="token prefix inserted">+</span><span class="token line">  background: theme.palette.grey[50],\n</span><span class="token prefix inserted">+</span><span class="token line">}))\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const Label = styled(\'span\')(({ theme }) => ({\n</span><span class="token prefix inserted">+</span><span class="token line">  color: theme.palette.primary.main,\n</span><span class="token prefix inserted">+</span><span class="token line">}))\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function Status({ label }) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const classes = useStyles();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    &lt;div className={classes.root}>\n</span><span class="token prefix deleted">-</span><span class="token line">      {icon}\n</span><span class="token prefix deleted">-</span><span class="token line">      &lt;span className={classes.label}>{label}&lt;/span>\n</span><span class="token prefix deleted">-</span><span class="token line">    &lt;/div>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &lt;Root>\n</span><span class="token prefix inserted">+</span><span class="token line">      {icon}\n</span><span class="token prefix inserted">+</span><span class="token line">      &lt;Label>{label}&lt;/Label>\n</span><span class="token prefix inserted">+</span><span class="token line">    &lt;/Root>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  )\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-success"><p><a href="https://siriwatk.dev/tool/jss-to-styled">This jss-to-styled tool</a> helps convert JSS to multiple styled components without increasing CSS specificity.</p>\n<p>This tool is <em>not</em> maintained by MUI.</p>\n\n</aside><h3 id="2-use-tss-react">2. Use <a href="https://github.com/garronej/tss-react">tss-react</a><a aria-labelledby="2-use-tss-react" class="anchor-link" href="#2-use-tss-react" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="2-use-tss-react"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><aside class="MuiCallout-root MuiCallout-error"><p>This API will not work if you are <a href="/material-ui/guides/interoperability/#styled-components">using <code>styled-components</code> as the underlying styling engine in place of <code>@emotion</code></a>.</p>\n\n</aside><p>The API is similar to JSS <code>makeStyles</code>, but under the hood, it uses <code>@emotion/react</code>.\nIt also features much better TypeScript support than v4&#39;s <code>makeStyles</code>.</p>\n<p>In order to use it, you&#39;ll need to add it to your project&#39;s dependencies:</p>\n<p>With npm:</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> tss-react\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With yarn:</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> tss-react\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>Codemod</h4><p>We provide <a href="https://github.com/mui/material-ui/blob/master/packages/mui-codemod/README.md#jss-to-tss-react">a codemod</a> to help migrate JSS styles to the <code>tss-react</code> API.</p>\n<div class="MuiCode-root"><pre><code class="language-bash">npx @mui/codemod v5.0.0/jss-to-tss-react <span class="token operator">&lt;</span>path<span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Example transformation:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import makeStyles from \'@material-ui/styles/makeStyles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { makeStyles } from \'tss-react/mui\';\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import Button from \'@mui/material/Button\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Link from \'@mui/material/Link\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const useStyles = makeStyles((theme) => {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const useStyles = makeStyles()((theme) => {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return {\n</span><span class="token prefix unchanged"> </span><span class="token line">    root: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      color: theme.palette.primary.main,\n</span><span class="token prefix unchanged"> </span><span class="token line">    },\n</span><span class="token prefix unchanged"> </span><span class="token line">    apply: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      marginRight: theme.spacing(2),\n</span><span class="token prefix unchanged"> </span><span class="token line">    },\n</span><span class="token prefix unchanged"> </span><span class="token line">  };\n</span><span class="token prefix unchanged"> </span><span class="token line">});\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function Apply() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const classes = useStyles();\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const { classes } = useStyles();\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;div className={classes.root}>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;Button component={Link} to="https://support.mui.com" className={classes.apply}>\n</span><span class="token prefix unchanged"> </span><span class="token line">        Apply now\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/Button>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default Apply;</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If you were using the <code>$</code> syntax and <code>clsx</code> to combine multiple CSS classes,\nthe transformation would look like this:</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import * as React from \'react\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import { makeStyles } from \'@material-ui/core/styles\';\n</span><span class="token prefix deleted">-</span><span class="token line">import clsx from \'clsx\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { makeStyles } from \'tss-react/mui\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const useStyles = makeStyles((theme) => ({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const useStyles = makeStyles&lt;void, \'child\' | \'small\'>()((theme, _params, classes) => ({\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  parent: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    padding: 30,\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    \'&amp;:hover $child\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    [`&amp;:hover .${classes.child}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      backgroundColor: \'red\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    },\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">  small: {},\n</span><span class="token prefix unchanged"> </span><span class="token line">  child: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    backgroundColor: \'blue\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    height: 50,\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    \'&amp;$small\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    [`&amp;.${classes.small}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      backgroundColor: \'lightblue\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      height: 30\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">}));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function App() {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const classes = useStyles();\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const { classes, cx } = useStyles();\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;div className={classes.parent}>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;div className={classes.child}>\n</span><span class="token prefix unchanged"> </span><span class="token line">        Background turns red when the mouse hovers over the parent.\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/div>\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      &lt;div className={clsx(classes.child, classes.small)}>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      &lt;div className={cx(classes.child, classes.small)}>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        Background turns red when the mouse hovers over the parent.\n</span><span class="token prefix unchanged"> </span><span class="token line">        I am smaller than the other child.\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default App;</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-error"><p>When using JavaScript (rather than TypeScript), remove <code>&lt;void, &#39;child&#39; | &#39;small&#39;&gt;</code>.</p>\n\n</aside><p>The following is a comprehensive example using the <code>$</code> syntax, <code>useStyles()</code> parameters, merging in classes from a <code>classes</code> prop (<a href="https://docs.tss-react.dev/your-own-classes-prop">see doc</a>) and <a href="https://docs.tss-react.dev/api/makestyles#naming-the-stylesheets-useful-for-debugging-and-theme-style-overrides">an explicit name for the stylesheet</a>.</p>\n<div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import clsx from \'clsx\';\n</span><span class="token prefix deleted">-</span><span class="token line">import { makeStyles, createStyles } from \'@material-ui/core/styles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { makeStyles } from \'tss-react/mui\';\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const useStyles = makeStyles((theme) => createStyles&lt;\n</span><span class="token prefix deleted">-</span><span class="token line">  \'root\' | \'small\' | \'child\', {color: \'primary\' | \'secondary\', padding: number}\n</span><span class="token prefix deleted">-</span><span class="token line">>\n</span><span class="token prefix deleted">-</span><span class="token line">({\n</span><span class="token prefix deleted">-</span><span class="token line">  root: ({color, padding}) => ({\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const useStyles = makeStyles&lt;{color: \'primary\' | \'secondary\', padding: number}, \'child\' | \'small\'>({name: \'App\'})((theme, { color, padding }, classes) => ({\n</span><span class="token prefix inserted">+</span><span class="token line">  root: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    padding: padding,\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    \'&amp;:hover $child\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    [`&amp;:hover .${classes.child}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      backgroundColor: theme.palette[color].main,\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  }),\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  small: {},\n</span><span class="token prefix unchanged"> </span><span class="token line">  child: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    border: \'1px solid black\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    height: 50,\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    \'&amp;$small\': {\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    [`&amp;.${classes.small}`]: {\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">      height: 30\n</span><span class="token prefix unchanged"> </span><span class="token line">    }\n</span><span class="token prefix unchanged"> </span><span class="token line">  }\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">}), {name: \'App\'});\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">}));\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function App({classes: classesProp}: {classes?: any}) {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  const classes = useStyles({color: \'primary\', padding: 30, classes: classesProp});\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  const { classes, cx } = useStyles({\n</span><span class="token prefix inserted">+</span><span class="token line">    color: \'primary\',\n</span><span class="token prefix inserted">+</span><span class="token line">    padding: 30\n</span><span class="token prefix inserted">+</span><span class="token line">  }, {\n</span><span class="token prefix inserted">+</span><span class="token line">    props: {\n</span><span class="token prefix inserted">+</span><span class="token line">      classes: classesProp\n</span><span class="token prefix inserted">+</span><span class="token line">    }\n</span><span class="token prefix inserted">+</span><span class="token line">  });\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return (\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;div className={classes.root}>\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;div className={classes.child}>\n</span><span class="token prefix unchanged"> </span><span class="token line">        The Background take the primary theme color when the mouse hovers the parent.\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/div>\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">      &lt;div className={clsx(classes.child, classes.small)}>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      &lt;div className={cx(classes.child, classes.small)}>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">        The Background take the primary theme color when the mouse hovers the parent.\n</span><span class="token prefix unchanged"> </span><span class="token line">        I am smaller than the other child.\n</span><span class="token prefix unchanged"> </span><span class="token line">      &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &lt;/div>\n</span><span class="token prefix unchanged"> </span><span class="token line">  );\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default App;</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>After running the codemod, search your code for &quot;TODO jss-to-tss-react codemod&quot; to find cases that the codemod could not handle reliably.</p>\n<p>There may be other cases beyond those with TODO comments that are not handled fully by the codemod—particularly if parts of the styles are returned by functions.</p>\n<p>If the styles buried within a function use the <code>$</code> syntax or <code>useStyles</code> params, then those styles won&#39;t be migrated appropriately.</p>\n<aside class="MuiCallout-root MuiCallout-error"><p>You should drop <a href="https://www.npmjs.com/package/clsx"><code>clsx</code></a> in favor of <a href="https://emotion.sh/docs/@emotion/css#cx"><code>cx</code></a>.</p>\n<p>The key advantage of <code>cx</code> is that it detects Emotion-generated class names to ensure that styles are overwritten in the correct order.</p>\n<p>The default precedence of styles from multiple CSS classes is different between JSS and tss-react and some manual re-ordering of <code>cx</code> parameters\nmay be necessary—see <a href="https://github.com/mui/material-ui/pull/31802#issuecomment-1093478971">this issue comment</a> for more details.</p>\n\n</aside><p>To ensure that your class names always includes the actual name of your components, you can provide the <code>name</code> as an implicitly named key (<code>name: { App }</code>).</p>\n<p>See <a href="https://docs.tss-react.dev/api/makestyles#naming-the-stylesheets-useful-for-debugging-and-theme-style-overrides">this tss-react doc</a> for details.</p>\n<p>You may end up with eslint warnings <a href="https://user-images.githubusercontent.com/6702424/148657837-eae48942-fb86-4516-abe4-5dc10f44f0be.png">like this one</a> if you deconstruct more than one item.</p>\n<p>Don&#39;t hesitate to disable <code>eslint(prefer-const)</code>, <a href="https://github.com/thieryw/gitlanding/blob/b2b0c71d95cfd353979c86dfcfa1646ef1665043/.eslintrc.js#L17">like this</a> in a regular project, or <a href="https://github.com/InseeFrLab/onyxia-web/blob/a264ec6a6a7110cb1a17b2e22cc0605901db6793/package.json#L133">like this</a> in a CRA.</p>\n<h4>withStyles()</h4><p><code>tss-react</code> also features a <a href="https://docs.tss-react.dev/api/withstyles">type-safe implementation</a> of <a href="https://v4.mui.com/styles/api/#withstyles-styles-options-higher-order-component">v4&#39;s <code>withStyles()</code></a>.</p>\n<aside class="MuiCallout-root MuiCallout-info"><p>The equivalent of the <code>$</code> syntax is also supported in tss&#39;s <code>withStyles()</code>.\n<a href="https://docs.tss-react.dev/nested-selectors#withstyles">See doc</a>.</p>\n\n</aside><div class="MuiCode-root"><pre><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import Button from \'@material-ui/core/Button\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import Button from \'@mui/material/Button\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import withStyles from \'@material-ui/styles/withStyles\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import { withStyles } from \'tss-react/mui\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const MyCustomButton = withStyles(\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  Button,\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  (theme) => ({\n</span><span class="token prefix unchanged"> </span><span class="token line">    root: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      minHeight: \'30px\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    },\n</span><span class="token prefix unchanged"> </span><span class="token line">    textPrimary: {\n</span><span class="token prefix unchanged"> </span><span class="token line">      color: theme.palette.text.primary,\n</span><span class="token prefix unchanged"> </span><span class="token line">    },\n</span><span class="token prefix unchanged"> </span><span class="token line">    \'@media (min-width: 960px)\': {\n</span><span class="token prefix unchanged"> </span><span class="token line">      textPrimary: {\n</span><span class="token prefix unchanged"> </span><span class="token line">        fontWeight: \'bold\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">    },\n</span><span class="token prefix unchanged"> </span><span class="token line">  }),\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">)(Button);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">export default MyCustomButton;</span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h4>Theme style overrides</h4><p><a href="https://v4.mui.com/customization/components/#global-theme-override">Global theme overrides</a> are supported out of the box by TSS.</p>\n<p>Follow the instructions in the relevant section of the <a href="/material-ui/migration/v5-style-changes/#restructure-component-definitions">Breaking changes</a> doc, and <a href="https://docs.tss-react.dev/api/makestyles#naming-the-stylesheets-useful-for-debugging-and-theme-style-overrides">provide a <code>name</code> to <code>makeStyles</code></a>.</p>\n<p>In Material UI v5, <a href="https://mui.com/material-ui/customization/theme-components/">style overrides also accept callbacks</a>.</p>\n<p>By default, TSS is only able to provide the theme.\nIf you want to provide the props and the <code>ownerState</code>, <a href="https://docs.tss-react.dev/mui-global-styleoverrides">please refer to this documentation</a>.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>tss-react is <em>not</em> maintained by MUI.</p>\n<p>If you have any question about how to setup SSR (Next.js), or if you are wondering\nhow to customize the <code>theme</code> object, please refer to the tss-react documentation—particularly the <a href="https://github.com/garronej/tss-react#mui-integration">MUI integration section</a>.</p>\n<p>You can also <a href="https://github.com/garronej/tss-react/issues/new">submit an issue</a> for any bug or feature request, and <a href="https://github.com/garronej/tss-react/discussions">start a discussion</a> if you need help.</p>\n\n</aside><h2 id="complete-the-migration">Complete the migration<a aria-labelledby="complete-the-migration" class="anchor-link" href="#complete-the-migration" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="complete-the-migration"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Once you migrate all of the styling, remove unnecessary <code>@mui/styles</code> by uninstalling the package.</p>\n<p>With npm:</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">npm</span> uninstall @mui/styles\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>With yarn:</p>\n<div class="MuiCode-root"><pre><code class="language-bash"><span class="token function">yarn</span> remove @mui/styles\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p><code>@emotion/styled</code> is a peer dependency of <code>@mui/material</code>.\nYou must keep it in your dependencies even if you never explicitly use it.</p>\n\n</aside>'],toc:[{text:"Material UI v5 migration",level:2,hash:"material-ui-v5-migration",children:[]},{text:"Migrating from JSS to Emotion",level:2,hash:"migrating-from-jss-to-emotion",children:[{text:"1. Use styled or sx API",level:3,hash:"1-use-styled-or-sx-api"},{text:"2. Use tss-react",level:3,hash:"2-use-tss-react"}]},{text:"Complete the migration",level:2,hash:"complete-the-migration",children:[]}],title:"Migrating from JSS (optional)",headers:{components:[]}}},l={};l.scope={process:{},import:{}};var i={},c={},d=e(824246);function r(){return(0,d.jsx)(p.Z,(0,t.Z)({},a))}},30733:function(s,n,e){"use strict";e.d(n,{Z:function(){return v}});var a,t=e(295649),p=e(827378),o=e(723615),l=e.n(o),i=e(686677),c=e(486925),d=e(228319),r=e(791963),k=e(807716),u=e(776504),h=e(274087),m=e(957904),f=e(853403),g=e(54775),y=e(824246);function x(s){var n=s.mode,e=(0,d.tv)().setMode;return p.useEffect(function(){e(n)},[n,e]),null}function v(s){var n=(0,c.Z)(),e=(0,i.useRouter)(),o=(0,k.ln)(e.asPath).canonicalAs,l=s.disableAd,v=void 0!==l&&l,b=s.disableToc,C=s.disableCssVarsProvider,S=s.demos,w=void 0===S?{}:S,M=s.docs,I=s.demoComponents,B=s.srcComponents,R=M[(0,h.useUserLanguage)()]||M.en,j=R.description,T=R.location,$=R.rendered,A=R.title,N=R.toc,P=o.startsWith("/joy-ui/")&&!(void 0!==C&&C),E=P?d.lL:p.Fragment,H=P?m.default:p.Fragment,J=(0,t.Z)({},P&&{mode:n.palette.mode});return(0,y.jsxs)(u.Z,{description:j,disableAd:v,disableToc:void 0!==b&&b,location:T,title:A,toc:N,children:[v?null:a||(a=(0,y.jsx)(m.default,{children:(0,y.jsx)(g.Z,{children:(0,y.jsx)(f.Z,{})})})),(0,y.jsxs)(E,{children:[P&&(0,y.jsx)(x,{mode:n.palette.mode}),$.map(function(s,e){return(0,y.jsx)(r.Z,{demoComponents:I,demos:w,disableAd:v,localizedDoc:R,location:T,renderedMarkdownOrDemo:s,srcComponents:B,theme:n,WrapperComponent:H,wrapperProps:J},"demos-section-".concat(e))})]})]})}x.propTypes={mode:l().oneOf(["light","dark"])}},206658:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/migration/migrating-from-jss",function(){return e(219001)}])}},function(s){s.O(0,[64631,87455,35408,76899,54472,74048,92674,55308,96369,89822,20933,45038,58849,68846,80381,62839,53280,12094,9459,66152,51147,43797,22397,88924,49774,92888,40179],function(){return s(s.s=206658)}),_N_E=s.O()}]);